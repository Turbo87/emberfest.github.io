/*! Emberfest 23-01-2014 */
var Emberfest=Ember.Application.create({rootElement:"#app"});Emberfest.AdminRoute=Ember.Route.extend({model:function(){var a=[];return a.pushObject(this.store.createRecord("adminData"),{id:"users"}),a.pushObject(this.store.createRecord("adminData"),{id:"talks"}),a.pushObject(this.store.createRecord("adminData"),{id:"cookies"}),a.pushObject(this.store.createRecord("adminData"),{id:"tickets"}),a}}),Emberfest.Router=Ember.Router.extend({location:"history"}),Emberfest.Router.map(function(){this.route("index",{path:"/"}),this.route("munich"),this.route("partners"),this.route("organizers"),this.resource("talks",function(){this.route("talk",{path:"/:talk_id"})}),this.route("tickets"),this.route("venue"),this.route("register"),this.route("registerTalk"),this.route("profile"),this.resource("admin",function(){this.resource("adminData",{path:"/data/:data_id"},function(){})})}),Ember.Handlebars.registerBoundHelper("markdown",function(a){var b=new Showdown.converter;return null!==a?new Handlebars.SafeString(b.makeHtml(a)):void 0}),Emberfest.LiviconView=Ember.View.extend({tagName:"i",attributeBindings:["data-name","data-color","data-size","data-hovercolor","data-op"],didInsertElement:function(){$("#"+this.get("elementId")).addLivicon()}}),Emberfest.LiviconMorphView=Ember.View.extend({tagName:"div",attributeBindings:["data-name","data-color","data-size","data-hovercolor","data-op"],didInsertElement:function(){$("#"+this.get("elementId")).addLivicon()}}),Emberfest.Store=DS.Store.extend({adapter:"Emberfest.Adapter"}),DS.RESTAdapter.reopen({namespace:"json"}),Emberfest.Adapter=DS.RESTAdapter.extend({defaultSerializer:"Emberfest/application"}),Emberfest.ApplicationSerializer=DS.RESTSerializer.extend({}),Emberfest.RawTransform=DS.Transform.extend({deserialize:function(a){return a},serialize:function(a){return a}}),Emberfest.ApplicationController=Ember.Controller.extend({needs:["user"],actions:{doLogIn:function(){console.log("doLogIn Action"),navigator.id.request()},doLogOut:function(){console.log("doLogOut Action"),navigator.id.logout()}},routeScheduler:null,routeToGoTo:null,scheduleRouteTransition:function(a){var b=this.get("routeScheduler"),c=this;b||(console.log("[ROUTE SCHEDULER]: Creating Route Scheduler!"),b=setInterval(function(){c.doTransitionToRoute()},50),this.set("routeScheduler",b)),(new Date).getTime()-Emberfest.get("lastTransition")>450&&(console.log("[ROUTE SCHEDULER]: scheduling destination route: "+a),this.set("routeToGoTo",a))},doTransitionToRoute:function(){var a=this.get("routeToGoTo");a&&(console.log("[ROUTE SCHEDULER]: transitioning to route: "+a),this.transitionToRoute(a),this.set("routeToGoTo",null))},isOnHome:function(){return console.log("currentPath: "+this.get("currentPath")),"index"===this.get("currentPath")}.property("currentPath")}),Emberfest.IndexIndexRoute=Ember.Route.extend({setupController:function(a,b){this._super(a,b),console.log("INDEX"),_gaq.push(["_trackPageview","/"]),document.title="Welcome to Ember Fest!"}}),Emberfest.IndexRoute=Ember.Route.extend({setupController:function(a,b){this._super(a,b),console.log("INDEX"),_gaq.push(["_trackPageview","/"]),document.title="Welcome to Ember Fest!"}}),Emberfest.MunichRoute=Ember.Route.extend({setupController:function(a,b){this._super(a,b),console.log("MUNICH"),_gaq.push(["_trackPageview","/munich"]),document.title="Ember Fest 2013 - Munich!"}}),Emberfest.Model=Ember.Object.extend(),Emberfest.Model.reopenClass({find:function(a,b){console.log("find: "+b+" id: "+a);var c=this.contentArrayContains(a,b);return c||(c=b.create({id:a,isLoaded:!1}),Ember.get(b,"collection").pushObject(c)),c},contentArrayContains:function(a,b){var c=null;return Ember.get(b,"collection").forEach(function(b){b.get("id")===a&&(c=b)}),c},findAll:function(a,b,c){console.log("findAll: "+b+" "+a+" "+c);var d=this;return $.getJSON(a,function(a){$.each(a[c],function(a,c){var e=d.contentArrayContains(c.id,b);e||(e=b.create(),Ember.get(b,"collection").pushObject(e)),e.setProperties(c),e.set("isLoaded",!0),e.set("isError",!1)})}),Ember.get(b,"collection")},"delete":function(a,b,c){console.log("delete: "+b+" "+c);var d=this;$.ajax({type:"DELETE",url:a+"/"+c,success:function(a){if(a.deleted){var e=d.contentArrayContains(c,b);e&&Ember.get(b,"collection").removeObject(e)}},error:function(a,b,c){alert("Unable to delete: "+b+" :: "+c)}})},createRecord:function(a,b,c){console.log("save: "+b+" "+c.get("id"));c.set("isSaving",!0),$.ajax({type:"PUT",url:a,data:JSON.stringify(c),success:function(a){a.submitted?(Ember.get(b,"collection").pushObject(c),c.set("isSaving",!1)):c.set("isError",!0)},error:function(){c.set("isError",!1)}})},updateRecord:function(a,b,c){console.log("update: "+b+" "+c.get("id"));c.set("isSaving",!0),console.log(JSON.stringify(c)),$.ajax({type:"PUT",url:a,data:JSON.stringify(c),success:function(a){a.id?(c.set("isSaving",!1),c.setProperties(a)):c.set("isError",!0)},error:function(){c.set("isError",!1)}})}}),Emberfest.AdminData=DS.Model.extend({}),Emberfest.Talk=DS.Model.extend({title:DS.attr("string"),talkAbstract:DS.attr("string"),talkType:DS.attr("string"),topics:DS.attr("string"),outline:DS.attr("string"),participantRequirements:DS.attr("string"),comments:DS.attr("string"),talkSuggestedBy:DS.attr("string"),talkBy:DS.attr("string")}),Emberfest.ProfileController=Ember.ObjectController.extend({needs:["user"],actions:{doLogIn:function(){console.log("doLogIn Action"),navigator.id.request()}}}),Emberfest.ProfileRoute=Ember.Route.extend({model:function(){var a=this.controllerFor("user").readCookie("uuidToken");return console.log("ProfileRoute uuidToken: "+a),a?this.store.find("user",a):void 0}}),Emberfest.RegisterController=Ember.Controller.extend({needs:["user"],fullNameBinding:"controllers.user.fullName",companyBinding:"controllers.user.company",phoneBinding:"controllers.user.phone",dietaryRequirementsBinding:"controllers.user.dietaryRequirements",countryOfResidenceBinding:"controllers.user.countryOfResidence",yearOfBirthBinding:"controllers.user.yearOfBirth",attendingDinnerBinding:"controllers.user.attendingDinner",validationErrors:[],actions:{verifyAccountInput:function(){this.verifyInput()},doLogIn:function(){navigator.id.request()}},verifyInput:function(){this.set("validationErrors",[]),this.validateFieldContent(this.get("fullName"),5)||this.get("validationErrors").pushObject("Your full name must contain at least 5 characters!"),this.validateFieldContent(this.get("company"),2)||this.get("validationErrors").pushObject("Your company name must contain at least 2 characters!"),this.validateFieldContent(this.get("phone"),7)||this.get("validationErrors").pushObject("Your phone number must contain at least 7 characters!"),this.validateFieldContent(this.get("countryOfResidence"),3)||this.get("validationErrors").pushObject("Your country of residence must contain at least 3 characters!"),this.validateFieldContent(this.get("yearOfBirth"),4)||this.get("validationErrors").pushObject("Your year of birth must contain at least 4 characters!"),0===this.get("validationErrors").length&&(console.log("Registering user"),this.get("controllers.user.model").save())},validateFieldContent:function(a,b){return null!==a&&a.length>=b}}),Emberfest.RegisterTalkController=Ember.Controller.extend({needs:["user"],actions:{verifyTalkInput:function(){this.verifyInput()},doLogIn:function(){console.log("doLogIn Action"),navigator.id.request()}},validationErrors:[],verifyInput:function(){if(this.set("validationErrors",[]),this.validateFieldContent(this.get("title"),10)||this.get("validationErrors").pushObject("Your talk title must contain at least 10 characters!"),this.validateFieldContent(this.get("talkAbstract"),50)||this.get("validationErrors").pushObject("Your talk abstract must contain at least 50 characters!"),this.validateFieldContent(this.get("talkType"),2)||this.get("validationErrors").pushObject("Your talk type must contain at least 2 characters!"),this.validateFieldContent(this.get("topics"),5)||this.get("validationErrors").pushObject("Your talk topics must contain at least 5 characters!"),0===this.get("validationErrors").length){console.log("registering talk");var a=Math.uuid(16,16),b=this.store.createRecord("talk",{id:a,title:this.get("title"),talkAbstract:this.get("talkAbstract"),talkType:this.get("talkType"),topics:this.get("topics"),outline:this.get("outline"),participantRequirements:this.get("participantRequirements"),comments:this.get("comments")});b.save(),this.transitionToRoute("talks")}},validateFieldContent:function(a,b){return null!==a&&a.length>=b}}),Emberfest.RegisterTalkRoute=Ember.Route.extend({model:function(){return Ember.Object.create()},setupController:function(a,b){this._super(a,b),_gaq.push(["_trackPageview","/registerTalk/"]),document.title="Register Talk - Ember Fest"}}),Emberfest.RegisterTextfield=Ember.TextField.extend({focusOut:function(){console.log(this.get("controller")),this.get("controller").verifyInput()}}),Emberfest.TalksTalkRoute=Ember.Route.extend({model:function(a){return console.log("!!!TalksTalkRoute model!!"),console.log(a),this.store.find("talk",a.talk_id)}}),Emberfest.TalksIndexController=Ember.ArrayController.extend({needs:["user"],actions:{doLogIn:function(){console.log("doLogIn Action"),navigator.id.request()}}}),Emberfest.TalksIndexRoute=Ember.Route.extend({model:function(){return this.store.find("talk")}}),Emberfest.TicketType=DS.Model.extend({name:DS.attr("string"),ticketsAvailable:DS.attr("number"),price:DS.attr("number"),description:DS.attr("string")}),Emberfest.TicketsRoute=Ember.Route.extend({model:function(){var a=[];return a.pushObject(this.store.createRecord("ticketType",{id:"ebworkshop",name:"Early Bird Pre-Conference Workshop Ticket",ticketsAvailable:5,price:390,description:"This ticket is valid for the pre-conference workshop on August 26th and August 27th."})),a.pushObject(this.store.createRecord("ticketType",{id:"ebconf",name:"Early Bird Ember Fest Conference Ticket",ticketsAvailable:5,price:290,description:"This ticket is valid for the Ember Fest Conference on August 28th and August 29th."})),a.pushObject(this.store.createRecord("ticketType",{id:"ebworkshopconf",name:"Early Bird Pre-Conference Workshop and Ember Fest Conference Ticket",ticketsAvailable:0,price:640,description:"This ticket is valid for the pre-conference workshop on August 26th and August 27th and for the Ember Fest conference on August 28th and 29th."})),a}}),Emberfest.User=DS.Model.extend({userId:DS.attr("string"),fullName:DS.attr("string"),company:DS.attr("string"),phone:DS.attr("string"),dietaryRequirements:DS.attr("string"),attendingDinner:DS.attr("boolean"),countryOfResidence:DS.attr("string"),yearOfBirth:DS.attr("number"),authLevel:DS.attr("string"),talks:DS.hasMany("talk",{async:!0})}),Emberfest.UserController=Ember.ObjectController.extend({init:function(){this._super(),console.log("UserController init");var a=this;navigator.id.watch({loggedInUser:null,onlogin:function(b){$.ajax({type:"POST",url:"/auth/login",data:{assertion:b},success:function(b){b.uuidToken&&(console.log("setting uuidToken: "+b.uuidToken),a.createCookie("uuidToken",b.uuidToken,1),a.store.find("user",b.uuidToken).then(function(b){a.set("model",b)}))},error:function(){}})},onlogout:function(){$.ajax({type:"POST",url:"/auth/logout",success:function(b){console.log("onlogout: "),console.log(b),a.set("content.id",null),a.set("content.authLevel",null),a.eraseCookie("uuidToken")},error:function(a,b,c){console.log("error: "+b+" error: "+c)}})}})},createCookie:function(a,b,c){var d="";if(c){var e=new Date;e.setTime(e.getTime()+24*c*60*60*1e3),d="; expires="+e.toGMTString()}else d="";document.cookie=a+"="+b+d+"; path=/"},readCookie:function(a){for(var b=a+"=",c=document.cookie.split(";"),d=0;d<c.length;d++){for(var e=c[d];" "===e.charAt(0);)e=e.substring(1,e.length);if(0===e.indexOf(b))return e.substring(b.length,e.length)}return null},eraseCookie:function(a){this.createCookie(a,"",-1)},isLoggedIn:function(){return null!==this.get("id")&&("user"===this.get("authLevel")||"admin"===this.get("authLevel")||"root"===this.get("authLevel"))}.property("id","authLevel"),showRegistrationForm:function(){console.log("showRegistretionFormObserver: "+this.get("id")+" authLevel: "+this.get("authLevel")),null!==this.get("id")&&"not_registered"===this.get("authLevel")&&(console.log("transitioning to pages.register"),this.transitionToRoute("register"))}.observes("uuidToken","authLevel"),contentObserver:function(){console.log("user model updated: "),console.log(this.get("model"))}.observes("model")}),Emberfest.UserDetailsComponent=Ember.Component.extend({user:null,actions:{verifyAccountInput:function(){this.verifyInput()}},verifyInput:function(){console.log("this verify: "+this.get("user.yearOfBirth")),this.set("validationErrors",[]),this.validateFieldContentString(this.get("user.fullName"),5)||this.get("validationErrors").pushObject("Your full name must contain at least 5 characters!"),this.validateFieldContentString(this.get("user.company"),2)||this.get("validationErrors").pushObject("Your company name must contain at least 2 characters!"),this.validateFieldContentString(this.get("user.phone"),7)||this.get("validationErrors").pushObject("Your phone number must contain at least 7 characters!"),this.validateFieldContentString(this.get("user.countryOfResidence"),3)||this.get("validationErrors").pushObject("Your country of residence must contain at least 3 characters!"),this.validateFieldNumber(this.get("user.yearOfBirth"),1900)||this.get("validationErrors").pushObject("Your year of birth must be after 1900! "+this.get("user.yearOfBirth")),0===this.get("validationErrors").length&&(console.log("Registering user"),console.log(this.get("user")),this.get("user").save())},validateFieldContentString:function(a,b){return console.log("verifying: "+a+" to be length: "+b),null!==a&&a.length>=b},validateFieldNumber:function(a,b){return null!==a&&a>=b}});